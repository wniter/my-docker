# 版本号
version: "3"

services:
  # 字段参考
  # https://yeasy.gitbook.io/docker_practice/compose/compose_file
  # https://juejin.cn/post/7063381614604058661#heading-42

  
  # mysql镜像
  mysql:
    # mysql image版本号，如果image不存在，则compose会尝试拉去镜像
    image: mysql:5.7.39
    # 容器名称，相当于docker run --name xxx， 里面的参数
    container_name: mysql5.7.39
    # 指定Dockerfile所在文件夹的路径，Compose将会利用Dockerfile自动构建镜像，然后启动镜像中的容器
    # build:
      # context: ./data/mysql
      # 在dockerfile可以配置替换的配置，进行添加
      # dockerfile: dockerfile
    # 挂载一个目录或者一个已存在的数据卷容器
    volumes:
      - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
      # - mysql:/var/lib/mysql/data #这个数据映射有问题
      - /data/mysql/config/my.cnf:/etc/mysql/my.cnf # 映射数据库配置文件
    # 环境变量，相当于docker run -e xxx=xxx里面的-e参数
    environment:
    # root
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=local
      # - MYSQL_USER=roo
      # - MYSQL_PASSWORD=123456
      # PMA
      # - PMA_ARBITRARY=1
      # - PMA_HOST=mysql
      # - PMA_PORT=3306
      # - PMA_USER=root
      # - PMA_PASSWORD=123456
      - TZ=Asia/Shanghai # 设置容器时区与宿主机保持一致

      # 这个地方是路径
      # MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
    # 授予mysql服务对my_secret和my_other_secret机密的访问权限。my_other_secret被定义为外部机密。
    # 这意味着它已经在Docker中定义，无论是通过运行docker secret create命令还是通过另一个堆栈部署，都不会重新创建。如果外部机密不存在，堆栈部署将失败并显示secret not found错误。
    # secrets:
    #   - my_secret
    #   - my_other_secret
    # 端口
    ports:
      - 3306:3306
    # 重启方式，相当于docker run --restart里面的--restart参数
    restart: always
    # 覆盖容器启动后默认执行的命令，相当于docker run xxx /bin/bash里面最后一段命令
    #   command: --default-authentication-plugin=mysql_native_password
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # 设置utf8字符集
    #网路
    networks:
      - network

  # redis镜像
  redis:
    image: redis:7.0
    container_name: redis7.0
    build: 
      context: ./data/redis
      dockerfile: dockerfile
    volumes:
      - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
      - redis:/data
      # - /data/redis:/data #数据映射
      #   - /docker/mysql-redis/redis.conf:/etc/redis.conf
    ports:
      - "6379:6379"
    restart: always
        #网路
    networks:
      - network

#  便于区分，不然会生成随机ID
volumes:
  mysql:
  redis:

#配置 networkds
networks:
  network:
    # name:
    driver: bridge    





# secrets 敏感数据的存储，比如mysql的密码
# secrets:
#   my_secret:
#     file: ./my_secret.txt
#   my_other_secret:
#     external: true